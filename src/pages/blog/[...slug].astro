---
import { getCollection, render } from "astro:content";
import type { GetStaticPaths } from "astro";
import Footer from "../../components/footer.astro";
import Navbar from "../../components/navbar.astro";
import Toc from "../../components/toc.astro";
import Layout from "../../layouts/posinega.astro";

const iso_date = (date: Date) => date.toISOString().slice(0, 10);

export const getStaticPaths = (async () => {
	const [md_collection, mdx_collection] = await Promise.all([
		getCollection("blog"),
		getCollection("blog_mdx"),
	]);
	const all_posts = [
		...md_collection.map(post => ({ ...post, mdx: false })),
		...mdx_collection.map(post => ({ ...post, mdx: true })),
	];

	return all_posts.map(post => ({
		params: { slug: post.id },
		props: { post, fm: post.data },
	}));
}) satisfies GetStaticPaths;

const { post, fm } = Astro.props;
const { Content, headings } = await render(post);

import "../../styles/blog.css";
---

<Layout title={fm.title}>
	<Navbar slot="header" label="Blog Post" />
	<h1>{fm.title}</h1>
	<p>
		Published: {iso_date(fm.createdAt)}
		<br />
		{fm.updatedAt ? `Updated: ${iso_date(fm.updatedAt)}` : null}
	</p>
	<p>
		Raw file:
		<a href={`/blog/${post.id}.${post.mdx ? "mdx" : "md"}`}>
			{post.mdx ? "MDX" : "Markdown"}
		</a>
	</p>
	{
		headings.length > 0 && (
			<details id="_toc">
				<summary>Table of Contents</summary>
				<Toc {headings} />
			</details>
		)
	}
	<hr />
	<Content />
	<Footer slot="footer" />
</Layout>

<style>
	#_toc {
		a {
			text-decoration: none;
		}
	}

	@media (width >= 1600px) {
		#_toc {
			view-transition-name: static-4;
			position: fixed;
			background-color: var(--bg);
			margin: 0;
			padding: 1rlh 1.5em;
			border-radius: 4px;
			top: 1lh;
			left: 2ch;
			max-height: 90svh;
			width: 35ch;
		}

		#_toc[open] {
			overflow-y: scroll;
		}
	}
</style>
