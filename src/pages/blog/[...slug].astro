---
import { getCollection, render } from "astro:content";
import { Font } from "astro:assets";
import Layout from "../../layouts/posinega.astro";
import Navbar from "../../components/navbar.astro";
import Footer from "../../components/footer.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}

const { post } = Astro.props
const { Content: RenderedMarkdown } = await render(post);

const pub_date = post.data.date.toISOString().slice(0, 10);
---

<Layout title={post.data.title}>
	<Font slot="head" cssVariable="--font-subset-ital" preload />
	<Navbar slot="header" />
	<h1 id="title">{post.data.title}</h1>
	<p>Published: {pub_date}</p>
	<a href=`../${post.id}.md`>Markdown</a>
	<hr>
	<RenderedMarkdown />
	<Footer slot="footer" />
</Layout>

<style>
	@media (prefers-reduced-motion: no-preference) {
		:root {
			scroll-behavior: smooth;
		}
	}

	#title {
		font-size: 2rem;
		line-height: 1.4;
	}
</style>

<style is:inline>
	i, em, [style*="font-style:italic"] {
		font-family: var(--font-subset-ital);
	}

	h1, h2, h3, h4, h5, h6 {
		scroll-margin-top: calc(4em + 1lh);

		a[href^="#"] {
			visibility: hidden;
			margin: 0 1ch;
		}

		&:hover {
			a[href^="#"] {
				visibility: visible;
			}
		}
	}

	a {
		scroll-margin-top: calc(4em + 1lh);
	}
</style>

<style is:global>
	.astro-code, .astro-code span {
		color: light-dark(var(--shiki-light), var(--shiki-dark));
		background-color: light-dark(var(--shiki-light-bg), var(--shiki-dark-bg));
	}
</style>
	